<?xml version="1.0" encoding="UTF-8"?>
<project name="tvkinoradio" basedir="." default="deploy">

    <tstamp/>

    <property name="build.base.dir" value="release"/>
    <property name="build.src.dir" value="${build.base.dir}/src"/>

    <property name="deploy.host" value="5.9.44.46"/>
    <property name="deploy.port" value="222"/>
    <property name="deploy.user" value="tvkinoradio"/>
    <property name="deploy.password" value="Fz6RzSnujp3U4MRq"/>
    <property name="deploy.path" value="/var/www/tvkinoradio.dev"/>

    <target name="deploy">

        <echo>Get revision...</echo>
        <exec command="git rev-parse HEAD" outputProperty="revision"/>

        <echo>Zip code...</echo>
        <exec command="tar -pczf build-${revision}.tar.gz ." dir="${build.src.dir}" logoutput="true"/>

        <echo>Put code onto staging server...</echo>
        <scp host="${deploy.host}" port="${deploy.port}" username="${deploy.user}" password="${deploy.password}"
             file="${build.src.dir}/build-${revision}.tar.gz" todir="${deploy.path}/releases/${revision}"/>

        <echo>Unpacking sources on staging server...</echo>
        <ssh host="${deploy.host}" port="${deploy.port}" username="${deploy.user}" password="${deploy.password}"
             command="tar -xvz -C ${deploy.path}/releases/${revision} -f ${deploy.path}/releases/${revision}/build-${revision}.tar.gz"/>

        <echo>Migrating database...</echo>
        <ssh host="${deploy.host}" port="${deploy.port}" username="${deploy.user}" password="${deploy.password}"
             command="/usr/bin/php ${deploy.path}/releases/${revision}/protected/yiic migrate --interactive=0"
             display="true"/>

        <ssh host="${deploy.host}" port="${deploy.port}" username="${deploy.user}" password="${deploy.password}"
             command="chmod 0777 ${deploy.path}/shared/upload &amp;&amp; chmod 0777 ${deploy.path}/shared/runtime &amp;&amp; chmod 0777 ${deploy.path}/shared/assets"
             display="true"/>

        <ssh host="${deploy.host}" port="${deploy.port}" username="${deploy.user}" password="${deploy.password}"
             command="ln -sf ${deploy.path}/shared/images ${deploy.path}/releases/${revision}/public/images"
             display="true"/>
        <ssh host="${deploy.host}" port="${deploy.port}" username="${deploy.user}" password="${deploy.password}"
             command="ln -sf ${deploy.path}/shared/upload ${deploy.path}/releases/${revision}/public/upload"
             display="true"/>
        <ssh host="${deploy.host}" port="${deploy.port}" username="${deploy.user}" password="${deploy.password}"
             command="ln -sf ${deploy.path}/shared/assets ${deploy.path}/releases/${revision}/public/assets"
             display="true"/>
        <ssh host="${deploy.host}" port="${deploy.port}" username="${deploy.user}" password="${deploy.password}"
             command="ln -sf ${deploy.path}/shared/runtime ${deploy.path}/releases/${revision}/protected/runtime"
             display="true"/>

        <ssh host="${deploy.host}" port="${deploy.port}" username="${deploy.user}" password="${deploy.password}"
             command="rm -rf ${deploy.path}/current" display="true"/>
        <ssh host="${deploy.host}" port="${deploy.port}" username="${deploy.user}" password="${deploy.password}"
             command="ln -s ${deploy.path}/releases/${revision} ${deploy.path}/current" display="true"/>
    </target>

    <target name="backup">
        <ssh host="${deploy.host}" port="${deploy.port}" username="${deploy.user}" password="${deploy.password}"
             command="${mysqldump_exec} -u ${database.username} -p${database.password} -R --set-charset=${database.charset} -v ${database.basename} > ${database.basename}_${DSTAMP}${TSTAMP}.sql"
             display="true"/>
    </target>

    <target name="migrate" depends="backup" description="Migrating database">
        <ssh host="${deploy.host}" port="${deploy.port}" username="${deploy.user}" password="${deploy.password}"
             command="/usr/bin/php ${deploy.path}/current/protected/yiic migrate --interactive=0" display="true"/>
    </target>

    <target name="restart" description="Restarting">

        <ssh host="${deploy.host}" port="${deploy.port}" username="${deploy.user}" password="${deploy.password}"
             command="searchd -c ${deploy.path}/current/protected/config/sphinx.conf --status" display="true" property="searchdStatus"/>
        <if>
            <contains string="${searchdStatus}" substring="WARNING" casesensitive="false"/>
            <then>
                <ssh host="${deploy.host}" port="${deploy.port}" username="${deploy.user}" password="${deploy.password}"
                     command="indexer --all --config ${deploy.path}/current/protected/config/sphinx.conf" display="true"/>
                <ssh host="${deploy.host}" port="${deploy.port}" username="${deploy.user}" password="${deploy.password}"
                     command="searchd -c ${deploy.path}/current/protected/config/sphinx.conf" display="true"/>
            </then>
            <else>
                <ssh host="${deploy.host}" port="${deploy.port}" username="${deploy.user}" password="${deploy.password}"
                     command="searchd -c ${deploy.path}/current/protected/config/sphinx.conf --stop" display="true"/>
                <ssh host="${deploy.host}" port="${deploy.port}" username="${deploy.user}" password="${deploy.password}"
                     command="indexer --all --config ${deploy.path}/current/protected/config/sphinx.conf" display="true"/>
                <ssh host="${deploy.host}" port="${deploy.port}" username="${deploy.user}" password="${deploy.password}"
                     command="searchd -c ${deploy.path}/current/protected/config/sphinx.conf" display="true"/>
            </else>
        </if>
    </target>
</project>